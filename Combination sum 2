#include <bits/stdc++.h>
using namespace std;

void backtrack(int start, int target, vector<int>& arr, vector<int>& curr, vector<vector<int>>& ans) {
    if (target == 0) {
        ans.push_back(curr);
        return;
    }
    for (int i = start; i < arr.size(); i++) {
        if (i > start && arr[i] == arr[i-1]) continue; // skip duplicates
        if (arr[i] > target) break; // stop if number > target

        curr.push_back(arr[i]);
        backtrack(i+1, target-arr[i], arr, curr, ans);
        curr.pop_back();
    }
}

vector<vector<int>> combinationSum2(vector<int>& arr, int target) {
    sort(arr.begin(), arr.end());
    vector<vector<int>> ans;
    vector<int> curr;
    backtrack(0, target, arr, curr, ans);
    return ans;
}

int main() {
    vector<int> arr = {10,1,2,7,6,1,5};
    int target = 8;
    vector<vector<int>> ans = combinationSum2(arr, target);

    cout << "Combinations:\n";
    for (auto& v : ans) {
        cout << "[ ";
        for (int x : v) cout << x << " ";
        cout << "]\n";
    }
}
